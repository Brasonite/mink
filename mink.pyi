from collections.abc import Callable
from typing import Final

class Color:
    r: float
    g: float
    b: float
    a: float

    @classmethod
    def rgb(cls, r: float, g: float, b: float) -> Color: ...
    @classmethod
    def rgba(cls, r: float, g: float, b: float, a: float) -> Color: ...
    @classmethod
    def hsv(cls, h: float, s: float, v: float) -> Color: ...
    @classmethod
    def hsva(cls, h: float, s: float, v: float, a: float) -> Color: ...
    def as_array(self) -> list[float]: ...

    WHITE: Final[Color] = ...
    BLACK: Final[Color] = ...
    TRANSPARENT: Final[Color] = ...
    RED: Final[Color] = ...
    GREEN: Final[Color] = ...
    BLUE: Final[Color] = ...
    CYAN: Final[Color] = ...
    MAGENTA: Final[Color] = ...
    YELLOW: Final[Color] = ...

class Vec2:
    x: float
    y: float

    def __init__(self, x: float, y: float): ...
    def __add__(self, rhs: Vec2) -> Vec2: ...
    def __iadd__(self, rhs: Vec2) -> Vec2: ...
    def __sub__(self, rhs: Vec2) -> Vec2: ...
    def __isub__(self, rhs: Vec2) -> Vec2: ...
    def __mul__(self, rhs: Vec2 | float) -> Vec2: ...
    def __imul__(self, rhs: Vec2 | float) -> Vec2: ...
    def __truediv__(self, rhs: Vec2 | float) -> Vec2: ...
    def __itruediv__(self, rhs: Vec2 | float) -> Vec2: ...
    def __neg__(self) -> Vec2: ...

    ZERO: Final[Vec2] = ...
    ONE: Final[Vec2] = ...
    UP: Final[Vec2] = ...
    DOWN: Final[Vec2] = ...
    LEFT: Final[Vec2] = ...
    RIGHT: Final[Vec2] = ...

class Camera:
    size: Vec2 | None
    position: Vec2
    rotation: float
    zoom: float

    def __new__(cls, *args, **kwargs) -> Camera: ...

class Texture:
    pass

class Assets:
    def set_root(self, path: str) -> str: ...
    def resolve_path(self, path: str) -> str: ...
    def texture(self, path: str) -> Texture: ...

class Draw:
    def set_camera(self, camera: Camera | None) -> None: ...
    def sprite(
        self,
        texture: Texture,
        position: Vec2,
        rotation: float | None,
        scale: Vec2 | None,
        tint: Color | None,
    ) -> None: ...

class Input:
    def key_down(self, code: str) -> bool: ...
    def key_pressed(self, code: str) -> bool: ...
    def key_released(self, code: str) -> bool: ...
    def mouse_pos(self) -> Vec2: ...
    def mouse_down(self, button: str) -> bool: ...
    def mouse_pressed(self, button: str) -> bool: ...
    def mouse_released(self, button: str) -> bool: ...
    def scroll(self) -> Vec2: ...

class Stats:
    def fps(self) -> float: ...

class Time:
    def delta(self) -> float: ...

class Window:
    def resizable(self) -> bool: ...
    def set_resizable(self, value: bool) -> None: ...
    def size(self) -> Vec2: ...
    def set_size(self, value: Vec2) -> None: ...
    def title(self) -> str: ...
    def set_title(self, value: str) -> None: ...

assets: Assets
draw: Draw
input: Input
stats: Stats
time: Time
window: Window

def run(
    init_fn: Callable,
    load_fn: Callable,
    update_fn: Callable,
    draw_fn: Callable,
    exit_fn: Callable,
) -> None: ...
